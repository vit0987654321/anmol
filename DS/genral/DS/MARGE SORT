#include <stdio.h>
void merge(int arr[], int p, int q, int r) {
  int n = q - p + 1;
  int m = r - q;
  int L[n], M[m];
  for (int i = 0; i < n; i++)
    L[i] = arr[p + i];
  for (int j = 0; j < m; j++)
    M[j] = arr[q + 1 + j];
  int i, j, k;
  i = 0;
  j = 0;
  k = p;
  while (i < n && j < m) {
    if (L[i] <= M[j]) {
      arr[k] = L[i];
      i++;
    } else {
      arr[k] = M[j];
      j++;
    }
    k++;
  }
  while (i < n) {
    arr[k] = L[i];
    i++;
    k++;
  }
  while (j < m) {
    arr[k] = M[j];
    j++;
    k++;
  }
}
void Sort(int arr[], int l, int r) {
  if (l < r) {
    int m = l + (r - l) / 2;
    Sort(arr, l, m);
    Sort(arr, m + 1, r);
    merge(arr, l, m, r);
  }
}
void Array(int arr[], int size) {
  for (int i = 0; i < size; i++)
    printf("%d ", arr[i]);
  printf("\n");
}
int main() {
  int arr[] = {6,-55, 12, -10, 9, 1};
  int size = sizeof(arr) / sizeof(arr[0]);
  Sort(arr, 0, size - 1);
  printf("Sorted array: \n");
  Array(arr, size);
}