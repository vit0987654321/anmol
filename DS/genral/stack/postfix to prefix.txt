#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#define MAX 40

char str[MAX], stack[MAX];
int top = -1;

void push(char x)
{
  stack[++top] = x;
}

char pop()
{
  return stack[top--];
}
int checkofoperand(char w)
{
  return (w >= 'a' && w <= 'z') || (w >= 'A' && w <= 'Z');
}

int isoperator(char y) 
{
  switch (y) {
  case '+':
  case '-':
  case '/':
  case '*':
    return 1;
  }
  return 0;
}

void post_to_pre() 
{
  int L, i, j = 0;
  char x[20];
  char a, b, op;

  printf("Enter the postfix expression\n");
  scanf("%s", str);

  L = strlen(str);

  for (i = 0; i < MAX; i++)
    stack[i] = '\0';
  printf("Prefix expression is:\t");

  for (i = L - 1; i >= 0; i--)
  {
    if (isoperator(str[i]))
    {
      push(str[i]);
    } else
    {
      x[j++] = str[i];
      while ((top != -1) && (stack[top] == '#')) 
      {
        a = pop();
        x[j++] = pop();
      }
      push('#');
    }
  }
  x[j] = '\0';

  i = 0;
  j = strlen(x) - 1;
  char d[40];

  while (x[i] != '\0') {
    d[j--] = x[i++];
  }

  printf("%s\n", d);

}
int main() 
{
  post_to_pre();

  return 0;
}
