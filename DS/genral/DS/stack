#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
 
#define MAX 50
int size;
 struct Stack {
   int arr[MAX];
   int top;
}
void init_stk(struct Stack *st) {
   st->top = -1;
}
void push(struct Stack *st, int num) {
   if (st->top == size - 1) {
      printf("\nStack overflow(i.e., Stack full).");
      return;
   }
   st->top++;
   st->arr[st->top] = num;
}
 int pop(struct Stack *st) {
   int num;
   if (st->top == -1) {
      printf("\nStack underflow(i.e., Stack empty).");
      return NULL;
   }
   num = st->arr[st->top];
   st->top--;
   return num;
}
 
void disply(struct Stack *st) {
   int i;
   for (i = st->top; i >= 0; i--)
      printf("\n%d", st->arr[i]);
}
int main() {
   int element, opt, val;
   struct Stack ptr;
   init_stk(&ptr);
   printf("\nEnter Stack Size :");
   scanf("%d", &size);
   while (1) {
      printf("\npush");
      printf("\n2.pop");
      printf("\n3.disply");
      printf("\n4.QUIT");
      printf("\n");
      printf("\nEnter your option : ");
      scanf("%d", &opt);
      switch (opt) {
      case 1:
         printf("\nEnter the element");
         scanf("%d", &val);
         push(&ptr, val);
         break;
      case 2:
         element = pop(&ptr);
         printf("\nThe element popped : %d", element);
         break;
      case 3:
         printf("\nThe current Stack:");
         disply(&ptr);
         break;
      case 4:
         end(0);
      }
   }
   return (0);
}